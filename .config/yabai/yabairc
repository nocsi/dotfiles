#!/usr/bin/env sh

# Function definitions
adjust_spaces() {
  local desired_spaces=("$@")
  local display=1
  for desired_space in "${desired_spaces[@]}"; do
    local actual_space=$(yabai -m query --spaces | jq 'map(select(.display == '$display')) | length')
    yabai -m display --focus $display
    while (( actual_space != desired_space )); do
      if (( actual_space < desired_space )); then
        yabai -m space --create 
        ((actual_space++))
      else
        local last_space_index=$(yabai -m query --spaces | jq '.[].index | select(. == '$spaces_on_display')')
        yabai -m space --focus $last_space_index
        yabai -m space --destroy
        ((actual_space--))
      fi
    done
    ((display++))
  done
}



setup_space() {
  local idx="$1"
  local name="$2"
  yabai -m space "$idx" --label "$name"
}

sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

yabai -m config external_bar               all:40:0       \
                mouse_follows_focus        off            \
                focus_follows_mouse        off            \
                window_zoom_persist        off            \
                window_placement           second_child   \
                window_shadow              float          \
                window_opacity             on             \
                window_opacity_duration    0.2            \
                active_window_opacity      1.0            \
                normal_window_opacity      0.8            \
                window_animation_duration  0.5            \
                window_animation_easing    ease_out_quint \
                insert_feedback_color      0xff9dd274     \
                split_ratio                0.50           \
                auto_balance               off            \
                mouse_modifier             fn             \
                mouse_action1              move           \
                mouse_action2              resize         \
                mouse_drop_action          swap           \
                                                          \
                top_padding                8              \
                bottom_padding             8              \
                left_padding               8              \
                right_padding              8              \
                window_gap                 10

# Exclude problematic apps from being managed:
yabai -m rule --add app="^(LuLu|Calculator|Software Update|Dictionary|VLC|System Preferences|System Settings|zoom.us|Photo Booth|Archive Utility|Python|LibreOffice|App Store|Steam|Alfred|Activity Monitor)$" manage=off
yabai -m rule --add label="Finder" app="^Finder$" title="(Co(py|nnect)|Move|Info|Pref)" manage=off
yabai -m rule --add label="Safari" app="^Safari$" title="^(General|(Tab|Password|Website|Extension)s|AutoFill|Se(arch|curity)|Privacy|Advance)$" manage=off
yabai -m rule --add label="About This Mac" app="System Information" title="About This Mac" manage=off
yabai -m rule --add label="Clean My Mac" app="CleanMyMac" title="CleanMyMac" manage=off
yabai -m rule --add label="Select file to save to" app="^Inkscape$" title="Select file to save to" manage=off
yabai -m rule --add app="^Music$" display=2 manage=off
yabai -m rule --add app="^Simulator$" manage=off

yabai -m config layout bsp
yabai -m config window_placement second_child

yabai -m signal --add event=window_focused action="sketchybar -m --trigger window_focus &> /dev/null"
yabai -m signal --add event=window_title_changed action="sketchybar -m --trigger title_change &> /dev/null"

# Spaces adjustment
num_displays=$(yabai -m query --displays | jq 'length')
if [[ "$num_displays" -eq 3 ]]; then
  adjust_spaces 3 3 4
elif [[ "$num_displays" -eq 2 ]]; then
  adjust_spaces 5 5
elif [[ "$num_displays" -eq 1 ]]; then
  adjust_spaces 10 
fi


# Spaces setup
setup_space 1 browser
setup_space 3 notes
setup_space 4 communication
setup_space 5 music
setup_space 7 editor
setup_space 9 zed
setup_space 10 terminal

yabai -m rule --add app="^Obsidian$" space=^3
yabai -m rule --add app="^Music$" space=^5
yabai -m rule --add app="^Sublime Text$" space=^7
yabai -m rule --add app="^Zed$" space=^9
yabai -m rule --add app="^Alacritty$" space=^10

yabai -m signal --add event=window_focused action="sketchybar --trigger window_focus &> /dev/null"
yabai -m signal --add event=window_title_changed action="sketchybar --trigger title_change &> /dev/null"

echo "yabai configuration loaded.."
